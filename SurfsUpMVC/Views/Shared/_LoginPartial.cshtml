@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            @UserManager.GetUserName(User)
        </a>
        <ul class="dropdown-menu dropdown-menu-end">
            <li><h6 class="dropdown-header">My Account</h6></li>
            <li>
                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Manage Account</a>
            </li>
            <li><hr class="dropdown-divider"></li>
            <li><h6 class="dropdown-header">Admin menu</h6></li>
                <li>
                    <a class="dropdown-item" asp-area="" asp-controller="Boards" asp-action="Index">Surfboards</a>
                </li>
                <li>
                    <a class="dropdown-item" asp-area="" asp-controller="User" asp-action="Index">Users</a>
                </li>
                <li>
                    <a class="dropdown-item" asp-area="" asp-controller="Role" asp-action="Index">Roles</a>
                </li>
            <li><hr class="dropdown-divider"></li>
            <li>
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Rental", new { area = "" })">
                    <button class="dropdown-item" id="logout" type="submit">Logout</button>
                </form>
            </li>
        </ul>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
