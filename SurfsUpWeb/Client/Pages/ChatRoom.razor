@page "/ChatRoom"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Chat Room</PageTitle>

<AuthorizeView>
    <Authorized>
        @{
            emailName = @context.User.Identity?.Name;
        }
        <div class="form-group">
            <label>
                Message:
                <input @bind="messageInput" @onkeydown="@Enter" size="50" />
            </label>
        </div>
        <button @onclick="Send" disabled="@(!IsConnected)">Send</button>
    </Authorized>
</AuthorizeView>
<hr>

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? emailName;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    Task currentWork;
    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await (currentWork = hubConnection.SendAsync("SendMessage", emailName, messageInput)).ConfigureAwait(false);
            if(currentWork.IsCompleted) messageInput = string.Empty;
        }
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    private async Task Enter(KeyboardEventArgs e) // Press enter to send message.
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await ( currentWork = Send() );
        }
    }
}