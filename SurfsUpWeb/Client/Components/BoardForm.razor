@using Microsoft.AspNetCore.Authorization;
@using SurfsUpLibrary.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient client
@inject NavigationManager navigation
@attribute [Authorize]


<EditForm Model="@board" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3 mt-3">
        <label for="BoardName">Name</label>
        <InputText id="BoardName" class="form-control" @bind-Value="board.BoardName"></InputText>
    </div>
    <div class="mb-3 mt-3">
        <label for="Picture">Image</label>
        <InputText id="Picture" class="form-control" @bind-Value="board.Picture"></InputText>
    </div>
    <div class="mb-3 mt-3">
        <label for="Length">Length</label>
        <InputNumber id="Length" class="form-control" @bind-Value="board.Length"></InputNumber>
    </div>
    <div class="mb-3 mt-3">
        <label for="Width">Width</label>
        <InputNumber id="Width" class="form-control" @bind-Value="board.Width"></InputNumber>
    </div>
    <div class="mb-3 mt-3">
        <label for="Thickness">Thickness</label>
        <InputNumber id="Thickness" class="form-control" @bind-Value="board.Thickness"></InputNumber>
    </div>
    <div class="mb-3 mt-3">
        <label for="Volume">Volume</label>
        <InputNumber id="Volume" class="form-control" @bind-Value="board.Volume"></InputNumber>
    </div>
    <div class="mb-3 mt-3">
        <label for="Type">Type</label>
        <InputText id="Type" class="form-control" @bind-Value="board.Type"></InputText>
    </div>
    <div class="mb-3 mt-3">
        <label for="Price">Price</label>
        <InputNumber id="Price" class="form-control" @bind-Value="board.Price"></InputNumber>
    </div>
    <div class="mb-3 mt-3">
        <label for="Equipment">Equipment</label>
        <InputText id="Equipment" class="form-control" @bind-Value="board.Equipment"></InputText>
    </div>
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

@code {
    private Board board = new();
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
    }

    private async Task HandleSubmit()
    {
        await client.PostAsJsonAsync("api/v2/CreateBoard", board);
        navigation.NavigateTo("/shop", true);
    }
}